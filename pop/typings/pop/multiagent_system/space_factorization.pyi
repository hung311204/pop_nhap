"""
This type stub file was generated by pyright.
"""

import dgl
import networkx as nx
from grid2op.Action import BaseAction
from grid2op.Converter import IdToAct
from grid2op.Observation import ObservationSpace
from typing import Dict, List, Optional, Tuple
from pop.community_detection.community_detector import Community

Substation = int
EncodedAction = int
class HashableAction:
    def __init__(self, action: BaseAction) -> None:
        ...
    
    def __hash__(self) -> int:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __str__(self) -> str:
        ...
    


def factor_action_space(observation_space: ObservationSpace, full_converter: IdToAct, n_substations: int) -> Tuple[Dict[int, List[int]], Dict[HashableAction, int]]:
    ...

def factor_observation(obs_graph: nx.Graph, device: str, radius: int = ...) -> Dict[Substation, Optional[dgl.DGLHeteroGraph]]:
    ...

def split_graph_into_communities(graph: nx.Graph, communities: List[Community], device: str) -> Dict[Community, dgl.DGLHeteroGraph]:
    ...

